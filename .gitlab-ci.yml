stages:
  - preparation
  - test
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - vendor/

run_composer_install:
  stage: preparation
  image: composer
  before_script:
    - composer -v
  script:
    - composer install
  after_script:
    - composer dump-autoload

run_unit_tests:
  stage: test
  image: php:7.2-alpine
  variables:
    APP_ENV: $TEST_APP_ENV
    APP_DEBUG: $TEST_APP_DEBUG
    APP_KEY: $TEST_APP_KEY
    APP_TIMEZONE: $TEST_APP_TIMEZONE
    DB_CONNECTION: $TEST_DB_CONNECTION
    DB_HOST: $TEST_DB_HOST
    DB_DATABASE: $TEST_DB_DATABASE
    DB_USERNAME: $TEST_DB_USERNAME
    DB_PASSWORD: $TEST_DB_PASSWORD
    LOG_CHANNEL: $TEST_LOG_CHANNEL
    CACHE_DRIVER: $TEST_CACHE_DRIVER
    QUEUE_DRIVER: $TEST_QUEUE_DRIVER
    ACCESS_TOKEN_AGE: $TEST_ACCESS_TOKEN_AGE
  before_script:
    - docker-php-ext-install pdo pdo_mysql
  script:
    - php artisan migrate:fresh --seed
    - vendor/bin/phpunit

deploy:
  stage: deploy
  image: ubuntu
  variables:
    APP_ENV: $PROD_APP_ENV
    APP_DEBUG: $PROD_APP_DEBUG
    APP_KEY: $PROD_APP_KEY
    APP_TIMEZONE: $PROD_APP_TIMEZONE
    DB_CONNECTION: $PROD_DB_CONNECTION
    DB_HOST: $PROD_DB_HOST
    DB_DATABASE: $PROD_DB_DATABASE
    DB_USERNAME: $PROD_DB_USERNAME
    DB_PASSWORD: $PROD_DB_PASSWORD
    LOG_CHANNEL: $PROD_LOG_CHANNEL
    CACHE_DRIVER: $PROD_CACHE_DRIVER
    QUEUE_DRIVER: $PROD_QUEUE_DRIVER
    ACCESS_TOKEN_AGE: $PROD_ACCESS_TOKEN_AGE
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - echo "$PROD_SERVER_SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $PROD_SERVER_ADDRESS >> ~/.ssh/known_hosts
  script:
    - |
      ssh $PROD_SERVER_USER@$PROD_SERVER_ADDRESS "
        rm -Rf ~/service/synchrome-api;
        mkdir -p ~/service/synchrome-api && cd ~/service/synchrome-api;
        git clone http://$CI_DEPLOY_USER:$CI_DEPLOY_TOKEN@gitlab.com/dewadg/synchrome-api.git .;
        touch .env;
        echo APP_ENV=$APP_ENV >> .env;
        echo APP_DEBUG=$PROD_APP_DEBUG >> .env;
        echo APP_KEY=$PROD_APP_KEY >> .env;
        echo APP_TIMEZONE=$PROD_APP_TIMEZONE >> .env;
        echo DB_CONNECTION=$PROD_DB_CONNECTION >> .env;
        echo DB_HOST=$PROD_DB_HOST >> .env;
        echo DB_DATABASE=$PROD_DB_DATABASE >> .env;
        echo DB_USERNAME=$PROD_DB_USERNAME >> .env;
        echo DB_PASSWORD=$PROD_DB_PASSWORD >> .env;
        echo LOG_CHANNEL=$PROD_LOG_CHANNEL >> .env;
        echo CACHE_DRIVER=$PROD_CACHE_DRIVER >> .env;
        echo QUEUE_DRIVER=$PROD_QUEUE_DRIVER >> .env;
        echo ACCESS_TOKEN_AGE=$PROD_ACCESS_TOKEN_AGE >> .env;
        docker-compose up --build -d;
        exit;
      "
